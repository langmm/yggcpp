integer function test_ygg_function_@language@_1() result(r)
#ifdef YGGTEST_DYNAMIC_@LIBRARY@
  use YggInterface
  type(yggcomm) :: sComm, rComm
  type(yggdtype) :: sDtype
  character(len=5) :: data_send
  integer :: data_recv
  r = 1
  data_send = "alpha"
  data_recv = 0
  call setenv("test_name_OUT", "@language@::./@LIBRARY@::example_model_function")
  sDtype = create_dtype_from_schema('{"type": "string"}', .false.)
  sComm = init_comm("test_name", SEND, FUNCTION_COMM, sDtype, &
       IOR(COMM_FLAG_ASYNC, COMM_FLAG_SET_OPP_ENV))
  rComm = ygg_input("test_name")
  if (.NOT.c_associated(rComm%comm)) then
     write(*,*) "error in comm init"
     return
  end if
  if (.NOT.ygg_send(sComm, yggarg(data_send))) then
     write(*,*) "send failed"
     return
  end if
  if (comm_wait_for_recv(rComm, 10000_int64).LE.0) then
     write(*,*) "no messages waiting"
     return
  end if
  if (.NOT.ygg_recv(rComm, yggarg(data_recv))) then
     write(*,*) "recv failed"
     return
  end if
  if (data_recv.NE.5) then
     write(*,*) "data not equal", data_send, data_recv
     return
  end if
#else
  write(*,*) "Dynamic test library @LIBRARY@ not available"
#endif
  r = 0
end function test_ygg_function_@language@_1
