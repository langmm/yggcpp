function(embed_language LANGUAGE)
  set(options DISABLE_BY_DEFAULT)
  set(oneValueArgs INCLUDE_DIRS_VAR LIBRARY_VAR FIND_METHOD)
  set(multiValueArgs DEFINITIONS FIND_ARGS)
  cmake_parse_arguments(ARGS "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
  set(DEFAULT_ENABLED ON)
  if (ARGS_DISABLE_BY_DEFAULT)
    set(DEFAULT_ENABLED OFF)
  endif()
  option(YGG_EMBED_${LANGUAGE} "Build interfaces to support ${LANGUAGE} embedding" ${DEFAULT_ENABLED})
  if (NOT ARGS_INCLUDE_DIRS_VAR)
    set(ARGS_INCLUDE_DIRS_VAR ${LANGUAGE}_INCLUDE_DIRS)
  endif()
  if (NOT ARGS_LIBRARY_VAR)
    set(ARGS_LIBRARY_VAR ${LANGUAGE}_LIBRARY)
  endif()
  string(TOUPPER ${LANGUAGE} LANGUAGE_UPPER)
  if (NOT YGG_EMBED_${LANGUAGE})
    message(STATUS "${LANGUAGE} embedding disabled")
    list(APPEND YGG_INSTALL_DEFS -DYGGDRASIL_DISABLE_EMBEDDED_${LANGUAGE_UPPER})
    if (LANGUAGE STREQUAL "Python")
      list(APPEND YGG_INSTALL_DEFS -DYGGDRASIL_DISABLE_PYTHON_C_API)
    endif()
  else()
    include(SearchTools)
    if (ARGS_FIND_METHOD)
      cmake_language(CALL ${ARGS_FIND_METHOD} ${ARGS_FIND_ARGS})
    elseif (LANGUAGE STREQUAL "Python")
      find_package_python()
    else()
      find_package(${LANGUAGE})
    endif()
    if ((LANGUAGE STREQUAL "Python") AND (NOT ${LANGUAGE}_FOUND))
      set(${LANGUAGE}_FOUND ${${PYTHON_PREFIX}_FOUND})
    endif()
    if(${LANGUAGE}_FOUND)
      list(APPEND YGG_INSTALL_DEPS ${LANGUAGE})
      list(APPEND YGG_INSTALL_DEFS -DYGG_EMBED_${LANGUAGE_UPPER})
      message(STATUS "ARGS_INCLUDE_DIRS_VAR = ${ARGS_INCLUDE_DIRS_VAR} (${${ARGS_INCLUDE_DIRS_VAR}})")
      message(STATUS "ARGS_LIBRARY_VAR = ${ARGS_LIBRARY_VAR} (${${ARGS_LIBRARY_VAR}})")
      if (${ARGS_INCLUDE_DIRS_VAR})
        list(APPEND DEPS_INCLUDE_DIRS ${${ARGS_INCLUDE_DIRS_VAR}})
      endif()
      if (${ARGS_LIBRARY_VAR})
        list(APPEND DEPS_LIBRARIES ${${ARGS_LIBRARY_VAR}})
      endif()
      if (ARGS_DEFINITIONS)
        list(APPEND YGG_INSTALL_DEFS ${ARGS_DEFINITIONS})
      endif()
      if (LANGUAGE STREQUAL "Python")
        list(APPEND YGG_INSTALL_DEPS ${PYTHON_PREFIX})
        list(APPEND DEPS_LIBRARIES ${PYTHON_PREFIX}::NumPy)
	list(APPEND DEPS_LIBRARIES_PYTHON ${PYTHON_PREFIX}::Python)
      endif()
    else()
      message(STATUS "${LANGUAGE} not found, embedding will be disabled")
      set(YGG_EMBED_${LANGUAGE} OFF)
      list(APPEND YGG_INSTALL_DEFS -DYGGDRASIL_DISABLE_EMBEDDED_${LANGUAGE_UPPER})
      if (LANGUAGE STREQUAL "Python")
        list(APPEND YGG_INSTALL_DEFS -DYGGDRASIL_DISABLE_PYTHON_C_API)
      endif()
    endif()
    dump_cmake_variables(REGEX "^${LANGUAGE}*" OUTPUT_VAR package_vars VERBOSE)
    foreach (_variableName IN LISTS package_vars)
      set(${_variableName} ${${_variableName}} PARENT_SCOPE)
    endforeach()
  endif()
  list(APPEND YGG_EMBEDDED_LANGUAGES ${LANGUAGE})
  set(YGG_EMBEDDED_LANGUAGES ${YGG_EMBEDDED_LANGUAGES} PARENT_SCOPE)
  set(YGG_EMBED_${LANGUAGE} ${YGG_EMBED_${LANGUAGE}} PARENT_SCOPE)
  set(DEPS_INCLUDE_DIRS ${DEPS_INCLUDE_DIRS} PARENT_SCOPE)
  set(DEPS_LIBRARIES ${DEPS_LIBRARIES} PARENT_SCOPE)
  set(DEPS_LIBRARIES_PYTHON ${DEPS_LIBRARIES_PYTHON} PARENT_SCOPE)
  set(YGG_INSTALL_DEPS ${YGG_INSTALL_DEPS} PARENT_SCOPE)
  set(YGG_INSTALL_DEFS ${YGG_INSTALL_DEFS} PARENT_SCOPE)
endfunction()