context:
  name: "YggInterface"
  python_name: "ygginterface"
  version: "1.10.2"
  build_number: 0

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  # url: https://pypi.io/packages/source/${{ name[0] }}/${{ name }}/${{ python_name }}-${{ version }}.tar.gz
  # sha256: 
  path: ../

build:
  number: ${{ build_number }}
  string: py${{ python | version_to_buildstring }}h${{ hash }}_${{ build_number }}

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - cross-python_${{ target_platform }}
        - python
    - cmake >=3.16
    - libcurl
    - ninja
    - numpy >=1.13.0
    - if: unix
      then:
        - ${{ stdlib('c') }}
        - ${{ compiler('c') }}
        - ${{ compiler('cxx') }}
        - ${{ compiler('fortran') }}
    # - if: win
    #   then:
    #     - m2w64-gcc-fortran
    - libcurl
    - llvm-openmp
    - openmpi
    - if: unix
      then: sysv_ipc
    - zeromq
  host:
    - hatch-fancy-pypi-readme
    - llvm-openmp
    - numpy >=1.13.0
    - openmpi
    - pip
    - python
    - scikit-build-core
    - setuptools_scm
    - if: unix
      then: sysv_ipc
    - zeromq
  run:
    # - if: unix
    #   then:
    #     - ${{ stdlib('c') }}
    - python

tests:
  - python:
      imports:
        - YggInterface
  - script:
      - pytest -sv tests/python
    requirements:
      run:
        - pytest
        - flask
        # - if: unix
        #   then: gunicorn
        # - if: win
        #   then: waitress
  - package_contents:
      files:
        - if: win
          then:
            - Library/cmake/YggInterfaceConfig.cmake
            - Library/cmake/YggInterfaceConfigVersion.cmake
            - Library/lib/libYggInterface.dll
            - Library/lib/libYggInterface_fortran.0.dll
        - if: unix
          then:
            - lib/cmake/YggInterface/YggInterfaceConfig.cmake
            - lib/cmake/YggInterface/YggInterfaceConfigVersion.cmake
        - if: linux
          then:
            - lib/libYggInterface.so
            - lib/libYggInterface_fortran.0.so
        - if: osx
          then:
            - lib/libYggInterface.dylib
            - lib/libYggInterface_fortran.0.dylib
      include:
        - YggInterface/YggInterface.hpp
        - YggInterface/YggInterface.h
        - YggInterface/rapidjson/include/rapidjson/rapidjson.h
        - YggInterface/ygginterface.mod
    files:
      source:
        - tests/

about:
  homepage: https://github.com/langmm/yggcpp
  repository: https://github.com/langmm/yggcpp
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: A framework for connecting computational models from multiple languages.
  description: |
    The Crops in Silico (CiS) framework, yggdrasil, provides support for
    connecting scientific models written in different programming languages.
    To connect two models, modelers add communications interfaces to the model code
    and provide declarative specification files that identfy the
    models that should be run and the inputs and outputs those models
    expect. yggdrasil uses this information to launch the models
    on parallel processes and orchestrate asynchronous communication between them.
    Although designed for connecting crop models, yggdrasil can be used to
    connect scientific models from any domain.
  documentation: https://cropsinsilico.github.io/yggcpp

extra:
  recipe-maintainers:
    - langmm
